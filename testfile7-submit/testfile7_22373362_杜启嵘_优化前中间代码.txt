declare i32 @getchar()
declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]
@dqr0 = private unnamed_addr constant [3 x i8] c", \00"
@dqr1 = private unnamed_addr constant [3 x i8] c"\n\00"
@dqr2 = private unnamed_addr constant [3 x i8] c", \00"
@dqr3 = private unnamed_addr constant [3 x i8] c", \00"
@dqr4 = private unnamed_addr constant [3 x i8] c"\n\00"

define dso_local i32 @fib(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	%4 = icmp eq i32 %3, 1
	br i1 %4, label %5, label %7
5:
	ret i32 1
6:
	br label %7
7:
	%8 = load i32, i32* %2
	%9 = icmp eq i32 %8, 2
	br i1 %9, label %10, label %12
10:
	ret i32 2
11:
	br label %12
12:
	%13 = load i32, i32* %2
	%14 = sub i32 %13, 1
	%15 = call i32 @fib(i32 %14)
	%16 = load i32, i32* %2
	%17 = sub i32 %16, 2
	%18 = call i32 @fib(i32 %17)
	%19 = add i32 %15, %18
	ret i32 %19
20:
}

define dso_local i32 @main() {
0:
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	store i32 5, i32* %2
	%3 = call i32 @getint()
	store i32 %3, i32* %1
	%4 = call i32 @getint()
	store i32 %4, i32* %2
	%5 = load i32, i32* %1
	%6 = load i32, i32* %2
	%7 = mul i32 %5, %6
	%8 = sub i32 0, %7
	%9 = call i32 @fib(i32 4)
	%10 = mul i32 %8, %9
	%11 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%12 = load i32, i32* %11
	%13 = add i32 %10, %12
	%14 = sdiv i32 %13, 5
	store i32 %14, i32* %1
	%15 = call i32 @fib(i32 5)
	%16 = add i32 %15, 2
	%17 = call i32 @fib(i32 %16)
	%18 = sub i32 1197, %17
	%19 = add i32 %18, -10091
	store i32 %19, i32* %2
	%20 = alloca i32
	store i32 -6, i32* %20
	%21 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%22 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%23 = load i32, i32* %22
	%24 = load i32, i32* %1
	%25 = load i32, i32* %1
	%26 = mul i32 %24, %25
	%27 = add i32 %23, %26
	store i32 %27, i32* %21
	%28 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%29 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%30 = load i32, i32* %29
	%31 = load i32, i32* %1
	%32 = load i32, i32* %1
	%33 = mul i32 %31, %32
	%34 = add i32 %30, %33
	store i32 %34, i32* %28
	%35 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%36 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%37 = load i32, i32* %36
	%38 = load i32, i32* %1
	%39 = load i32, i32* %1
	%40 = mul i32 %38, %39
	%41 = add i32 %37, %40
	store i32 %41, i32* %35
	%42 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%43 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%44 = load i32, i32* %43
	%45 = load i32, i32* %1
	%46 = load i32, i32* %1
	%47 = mul i32 %45, %46
	%48 = add i32 %44, %47
	store i32 %48, i32* %42
	%49 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%50 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%51 = load i32, i32* %50
	%52 = load i32, i32* %1
	%53 = load i32, i32* %1
	%54 = mul i32 %52, %53
	%55 = add i32 %51, %54
	store i32 %55, i32* %49
	%56 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%57 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%58 = load i32, i32* %57
	%59 = load i32, i32* %1
	%60 = load i32, i32* %1
	%61 = mul i32 %59, %60
	%62 = add i32 %58, %61
	store i32 %62, i32* %56
	%63 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%64 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%65 = load i32, i32* %64
	%66 = load i32, i32* %1
	%67 = load i32, i32* %1
	%68 = mul i32 %66, %67
	%69 = add i32 %65, %68
	store i32 %69, i32* %63
	%70 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%71 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%72 = load i32, i32* %71
	%73 = load i32, i32* %1
	%74 = load i32, i32* %1
	%75 = mul i32 %73, %74
	%76 = add i32 %72, %75
	store i32 %76, i32* %70
	%77 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%78 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%79 = load i32, i32* %78
	%80 = load i32, i32* %1
	%81 = load i32, i32* %1
	%82 = mul i32 %80, %81
	%83 = add i32 %79, %82
	store i32 %83, i32* %77
	%84 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%85 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%86 = load i32, i32* %85
	%87 = load i32, i32* %1
	%88 = load i32, i32* %1
	%89 = mul i32 %87, %88
	%90 = add i32 %86, %89
	store i32 %90, i32* %84
	store i32 0, i32* %1
	br label %91
91:
	%92 = load i32, i32* %1
	%93 = icmp slt i32 %92, 10
	br i1 %93, label %94, label %101
94:
	%95 = load i32, i32* %1
	%96 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %95
	%97 = load i32, i32* %96
	call void @putint(i32 %97)
	%98 = getelementptr [3 x i8], [3 x i8]* @dqr0, i32 0, i32 0
	call void @putstr(i8* %98)
	%99 = load i32, i32* %1
	%100 = add i32 %99, 1
	store i32 %100, i32* %1
	br label %91
101:
	%102 = load i32, i32* %1
	%103 = load i32, i32* %2
	%104 = load i32, i32* %20
	%105 = getelementptr [3 x i8], [3 x i8]* @dqr1, i32 0, i32 0
	call void @putstr(i8* %105)
	call void @putint(i32 %102)
	%106 = getelementptr [3 x i8], [3 x i8]* @dqr2, i32 0, i32 0
	call void @putstr(i8* %106)
	call void @putint(i32 %103)
	%107 = getelementptr [3 x i8], [3 x i8]* @dqr3, i32 0, i32 0
	call void @putstr(i8* %107)
	call void @putint(i32 %104)
	%108 = getelementptr [3 x i8], [3 x i8]* @dqr4, i32 0, i32 0
	call void @putstr(i8* %108)
	ret i32 0
109:
}

